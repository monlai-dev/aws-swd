name: CI/CD Build and Deploy to EC2

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: monlaine123/monlai:latest

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üßæ Checkout repository
        uses: actions/checkout@v3

      - name: üê≥ Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: üèóÔ∏è Build Docker image
        run: docker build -t $IMAGE_NAME .

      - name: üöÄ Push Docker image to Docker Hub
        run: docker push $IMAGE_NAME

      - name: üîê Set up SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: üõ∞Ô∏è Deploy to EC2 via SSH
        shell: bash
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_PROJECT_DIR: ${{ secrets.EC2_PROJECT_DIR }}
          REPO_URL: ${{ secrets.REPO_URL }}
          ENV: ${{ secrets.ENV }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          RDS_CONNECTION: ${{ secrets.RDS_CONNECTION }}
          SQS_QUEUE_URL: ${{ secrets.SQS_QUEUE_URL }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          ssh -o StrictHostKeyChecking=no "$EC2_HOST" <<EOF
          set -e

          echo "üîß Creating project directory"
          mkdir -p "$EC2_PROJECT_DIR"
          cd "$EC2_PROJECT_DIR"

          echo "üê≥ Ensuring Docker is running"
          sudo systemctl start docker || true
          sudo systemctl enable docker
          sudo usermod -aG docker ec2-user || true

          echo "üì¶ Installing docker-compose if missing"
          if ! command -v docker-compose &> /dev/null; then
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-\$(uname -s)-\$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi

          echo "üîê Logging in to Docker Hub"
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

          echo "üßæ Writing .env file"
          cat > .env <<EOT
  ENV=$ENV
  REDIS_URL=$REDIS_URL
  RDS_CONNECTION=$RDS_CONNECTION
  SQS_QUEUE_URL=$SQS_QUEUE_URL
  AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
  AWS_REGION=$AWS_REGION
  EOT
  
  echo "üìÑ Writing docker-compose.yml"
  cat > docker-compose.yml <<EOT
version: '3.8'
services:
  customer:
    image: $IMAGE_NAME
    command: ["./main", "customer", "--port", "8081"]
    ports:
      - "8081:8081"
    env_file:
      - .env

  driver:
    image: $IMAGE_NAME
    command: ["./main", "driver", "--port", "8082"]
    ports:
      - "8082:8082"
    env_file:
      - .env
  EOT
  
  echo "üö¢ Pulling latest code"
  if [ ! -d .git ]; then
  git clone "$REPO_URL" . || exit 1
  fi
  git fetch origin
  git reset --hard origin/main
  
  echo "üîÑ Restarting services"
  docker-compose down || true
  docker-compose pull
  docker-compose up -d
  
  echo "‚úÖ Running containers:"
  docker ps
  EOF
